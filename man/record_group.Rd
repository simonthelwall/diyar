% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/record_group.R
\name{record_group}
\alias{record_group}
\title{Deterministic linkage for epidemiological analysis}
\usage{
record_group(df, sn, criteria, sub_criteria = NULL, data_source = NULL,
  display = TRUE)
}
\arguments{
\item{df}{Dataframe. One or more datasets appened together.}

\item{sn}{Unique record indentifier for the dataframe.}

\item{criteria}{Matching criteria. Records with matching values in these columns are grouped together. Records are grouped in order of decreasing certainty. For exampe, the first criteria is more certain than second therefore, records matching on the first criteria will be grouped together in preference to those matching on the second criteria.}

\item{sub_criteria}{Matching sub-criteria. If is not \code{NULL}, only records with matching values in the \code{criteria} and \code{sub_criteria} columns are grouped together. Usefull in providing alternative or less stringent matching criteria.}

\item{data_source}{Unique dataset indentifier for the dataframe. Useful when dataframe contains multiple datasets.}

\item{display}{If \code{TRUE}, progress status at each stage of record grouping is displayed on screen.}
}
\value{
Dataframe
}
\description{
This function links records from one or more datasets into a unique idenfier. Linkage is based on specified matching criteria.
}
\examples{

library(dplyr)

df <- data.frame(
  cri_1 = c("A","C","B","C","A"),
  r_id = c(1:5),
  stringsAsFactors = FALSE
)

cbind(df, record_group(df,r_id, cri_1))

# Records with NA or "" in a particular criteria are excluded from episode grouping on that criteria
data_2 <- df
data_2$cri_1 <- ifelse(data_2$cri_1=="A", NA, data_2$cri_1)
data_2$cri_1 <- ifelse(data_2$cri_1=="B", "", data_2$cri_1)

cbind(data_2, record_group(data_2,r_id, cri_1, display = FALSE))

# Record grouping on 2 criteria
data_3 <- data.frame(
  cri_1 = c("A","C","Z","V","F","G","G"),
  cri_2 = c("CC","AA","CC","VV","AA","CB","CC"),
  r_id = c(1:7),

  stringsAsFactors = FALSE
)

data_3$cri_1 <- ifelse(data_3$r_id==7, NA, data_3$cri_1 )
cbind(data_3, record_group(data_3,r_id, c(cri_1, cri_2), display = FALSE))

# At each stage of episode grouping ("criteria"), additonal matching conditions ("sub_criteria") can be introduced with a list of sub-criteria.
# Each sub-criteria consists of character vectors which are column names within the dataframe.
# If records match on the "criteria" but do not match on ALL "sub_criteria", they are assigned to a new record group
# "sub_criteria" should be a list of character vectors. Each vector represents a sub-criteria
# Each sub-criteria should be name using this format; sXy, where "X" is linkage stage when the sub-criteria is to be introduced while "y" is a sufficient prefix to differentiate between the criteria

data_4 <- data.frame(
  cri_1 = c(NA,NA,NA,NA,NA,2,2),
  cri_2 = rep("A1",7),
  cri_2a = c("A","B","D","X","F","G","G"),
  cri_2b = c("B","B","D","X","F","G","I"),
  cri_2c = c("A","C","A","A","F","G","I"),
  r_id = c(1:7),

  stringsAsFactors = FALSE
)

cbind(df_4a, record_group(data_4,r_id, c(cri_1, cri_2), list(s2a=c("cri_2a","cri_2b","cri_2c")) ))

}
